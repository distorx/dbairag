{
  "test_date": "2025-08-24T00:51:10.814743",
  "summary": {
    "total_queries": 200,
    "successful": 200,
    "failed": 0,
    "success_rate": 100.0,
    "avg_response_time": 1648.833190202713,
    "methods_used": {
      "pattern_matching": 0,
      "llm_optimized": 0,
      "unknown": 200,
      "error": 0
    },
    "category_stats": {
      "temporal": {
        "total": 13,
        "success": 13,
        "failures": 0,
        "avg_time": [
          2135.0672245025635,
          1835.841417312622,
          1267.4548625946045,
          1855.5419445037842,
          1075.286865234375,
          1655.099868774414,
          1409.9574089050293,
          1318.4165954589844,
          1378.7248134613037,
          1623.412847518921,
          1905.4007530212402,
          1327.3301124572754,
          1548.7043857574463
        ]
      },
      "other": {
        "total": 135,
        "success": 135,
        "failures": 0,
        "avg_time": [
          2198.2882022857666,
          2467.066526412964,
          513.444185256958,
          1656.033992767334,
          1241.8262958526611,
          1174.9889850616455,
          1157.3753356933594,
          1962.655782699585,
          2083.486557006836,
          1998.6662864685059,
          1901.702642440796,
          1495.0096607208252,
          1569.9517726898193,
          3410.315990447998,
          1478.0094623565674,
          1903.1891822814941,
          1602.8773784637451,
          1476.1598110198975,
          1225.8038520812988,
          1523.794174194336,
          1430.5307865142822,
          1237.0471954345703,
          1140.4693126678467,
          1605.2567958831787,
          1085.8874320983887,
          5780.947923660278,
          1195.976972579956,
          1083.9760303497314,
          1242.640733718872,
          1038.4488105773926,
          986.7901802062988,
          1147.799015045166,
          1341.6082859039307,
          1299.145221710205,
          1868.4039115905762,
          1481.9464683532715,
          1363.8935089111328,
          1880.3277015686035,
          1417.7541732788086,
          1503.9172172546387,
          492.551326751709,
          1675.9521961212158,
          1895.0791358947754,
          1159.3832969665527,
          1627.6397705078125,
          1423.2549667358398,
          1482.4767112731934,
          1128.5810470581055,
          1299.689531326294,
          1304.5501708984375,
          1250.237226486206,
          1341.1247730255127,
          1138.4611129760742,
          1231.6615581512451,
          2349.0428924560547,
          1200.8795738220215,
          2202.3425102233887,
          1349.3902683258057,
          1847.848892211914,
          1478.3451557159424,
          2320.3845024108887,
          1603.9023399353027,
          1706.3252925872803,
          1558.0358505249023,
          1427.2980690002441,
          1955.2795886993408,
          1710.0718021392822,
          2296.536445617676,
          1701.1597156524658,
          1531.6157341003418,
          1752.1231174468994,
          1462.7337455749512,
          1919.8784828186035,
          3363.8672828674316,
          1462.3980522155762,
          2713.048219680786,
          1824.8305320739746,
          1622.0154762268066,
          2408.980369567871,
          1162.9748344421387,
          1236.5148067474365,
          3800.055742263794,
          2360.0285053253174,
          1568.0859088897705,
          1355.8604717254639,
          2321.4423656463623,
          1515.4223442077637,
          1724.7951030731201,
          1661.9312763214111,
          1597.5582599639893,
          1696.835994720459,
          1306.3747882843018,
          2117.680549621582,
          2104.313611984253,
          1456.7675590515137,
          1101.5853881835938,
          6289.570093154907,
          1334.9018096923828,
          1780.2281379699707,
          1775.1457691192627,
          1885.2484226226807,
          1380.3329467773438,
          1671.5707778930664,
          1896.2302207946777,
          1127.7098655700684,
          1004.6617984771729,
          2597.5942611694336,
          1008.8424682617188,
          1770.555019378662,
          2376.2919902801514,
          1063.4491443634033,
          1137.7203464508057,
          4695.935964584351,
          1816.5342807769775,
          1049.5059490203857,
          1657.3457717895508,
          2796.539306640625,
          1214.125156402588,
          1024.756669998169,
          1204.5886516571045,
          2075.923204421997,
          2151.193141937256,
          1437.4244213104248,
          1706.3937187194824,
          1602.5538444519043,
          2562.3838901519775,
          1426.8245697021484,
          1421.6101169586182,
          1703.2935619354248,
          2159.609317779541,
          1218.4066772460938,
          1435.349464416504,
          1841.4595127105713,
          3978.793144226074,
          1189.9528503417969
        ]
      },
      "grouping": {
        "total": 10,
        "success": 10,
        "failures": 0,
        "avg_time": [
          2059.741497039795,
          1788.9561653137207,
          1808.7871074676514,
          1691.3156509399414,
          4715.884685516357,
          1742.2504425048828,
          2157.7296257019043,
          1222.6498126983643,
          2124.289035797119,
          1190.0174617767334
        ]
      },
      "aggregation": {
        "total": 7,
        "success": 7,
        "failures": 0,
        "avg_time": [
          3041.4304733276367,
          1223.3240604400635,
          1348.076343536377,
          1558.701992034912,
          1249.2051124572754,
          1696.8040466308594,
          1818.394422531128
        ]
      },
      "status": {
        "total": 8,
        "success": 8,
        "failures": 0,
        "avg_time": [
          2134.0136528015137,
          1155.8740139007568,
          1764.6520137786865,
          1273.411750793457,
          1356.2874794006348,
          1631.5357685089111,
          1839.939832687378,
          1403.8283824920654
        ]
      },
      "counting": {
        "total": 17,
        "success": 17,
        "failures": 0,
        "avg_time": [
          1225.5067825317383,
          500.92601776123047,
          482.8310012817383,
          508.06593894958496,
          984.8411083221436,
          483.3855628967285,
          499.61090087890625,
          1426.3489246368408,
          971.3726043701172,
          1087.5132083892822,
          566.3425922393799,
          502.85935401916504,
          1059.5314502716064,
          487.98370361328125,
          538.8069152832031,
          1050.7020950317383,
          1028.2959938049316
        ]
      },
      "joining": {
        "total": 2,
        "success": 2,
        "failures": 0,
        "avg_time": [
          1603.7442684173584,
          1932.4040412902832
        ]
      },
      "bizarre": {
        "total": 2,
        "success": 2,
        "failures": 0,
        "avg_time": [
          1767.5480842590332,
          5100.323677062988
        ]
      },
      "selection": {
        "total": 6,
        "success": 6,
        "failures": 0,
        "avg_time": [
          1265.8498287200928,
          1960.935354232788,
          657.9673290252686,
          1060.314655303955,
          581.1758041381836,
          1146.9366550445557
        ]
      }
    }
  },
  "detailed_results": [
    {
      "id": 1,
      "query": "cancelled applications this month",
      "category": "temporal",
      "success": true,
      "response_time": 2135.0672245025635,
      "sql": "SELECT COUNT(*) \nFROM ScholarshipApplications AS sa WITH (NOLOCK) \nWHERE sa.Status = 2 \nAND MONTH(sa.SubmittedAt) = MONTH(GETDATE()) \nAND YEAR(sa.SubmittedAt) = YEAR(GETDATE())",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 2,
      "query": "honor roll students",
      "category": "other",
      "success": true,
      "response_time": 2198.2882022857666,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName, s.GPA \nFROM Students s WITH (NOLOCK) \nWHERE s.GPA >= 3.5 AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 3,
      "query": "students with no vowels in name",
      "category": "other",
      "success": true,
      "response_time": 2467.066526412964,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE FirstName NOT LIKE '%a%' AND FirstName NOT LIKE '%e%' AND FirstName NOT LIKE '%i%' AND FirstName NOT LIKE '%o%' AND FirstName NOT LIKE '%u%' AND FirstName NOT LIKE '%A%' AND FirstName NOT LIKE '%E%' AND FirstName NOT LIKE '%I%' AND FirstName NOT LIKE '%O%' AND FirstName NOT LIKE '%U%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 4,
      "query": "group family members by relationship type",
      "category": "grouping",
      "success": true,
      "response_time": 2059.741497039795,
      "sql": "SELECT Relationship, COUNT(*) AS FamilyMemberCount \nFROM FamilyMembers WITH (NOLOCK) \nGROUP BY Relationship",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 5,
      "query": "students from San Juan city",
      "category": "other",
      "success": true,
      "response_time": 513.444185256958,
      "sql": "SELECT COUNT(DISTINCT s.Id) AS total \n                                  FROM Students s WITH (NOLOCK) \n                                  LEFT JOIN Cities c1 WITH (NOLOCK) ON s.CityIdPhysical = c1.Id LEFT JOIN Cities c2 WITH (NOLOCK) ON s.CityIdPostal = c2.Id LEFT JOIN Cities c3 WITH (NOLOCK) ON s.UniversityCityId = c3.Id\n                                  WHERE c1.Name LIKE '%San Juan city%' OR c2.Name LIKE '%San Juan city%' OR c3.Name LIKE '%San Juan city%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 6,
      "query": "fiscal year summaries",
      "category": "aggregation",
      "success": true,
      "response_time": 3041.4304733276367,
      "sql": "SELECT \n    YEAR(ScholarshipApplication.SubmittedAt) AS FiscalYear,\n    COUNT(DISTINCT ScholarshipApplication.Id) AS TotalApplications,\n    COUNT(DISTINCT CASE WHEN ScholarshipApplication.Status = 1 THEN ScholarshipApplication.Id END) AS ApprovedApplications,\n    COUNT(DISTINCT CASE WHEN ScholarshipApplication.Status = 2 THEN ScholarshipApplication.Id END) AS RejectedApplications\nFROM \n    ScholarshipApplication WITH (NOLOCK)\nWHERE \n    ScholarshipApplication.SubmittedAt >= '2023-10-01' AND ScholarshipApplication.SubmittedAt < '2024-10-01'\nGROUP BY \n    YEAR(ScholarshipApplication.SubmittedAt)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 7,
      "query": "statistical outliers",
      "category": "other",
      "success": true,
      "response_time": 1656.033992767334,
      "sql": "SELECT StudentId, COUNT(*) AS DocumentCount\nFROM StudentDocuments WITH (NOLOCK)\nGROUP BY StudentId\nHAVING COUNT(*) > (SELECT AVG(DocumentCount) + 2 * STDEV(DocumentCount) FROM (SELECT COUNT(*) AS DocumentCount FROM StudentDocuments WITH (NOLOCK) GROUP BY StudentId) AS SubQuery)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 8,
      "query": "centenarian family members",
      "category": "other",
      "success": true,
      "response_time": 1241.8262958526611,
      "sql": "SELECT FM.* \nFROM FamilyMembers FM WITH (NOLOCK) \nWHERE DATEDIFF(YEAR, FM.DateOfBirth, GETDATE()) >= 100",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 9,
      "query": "last 24 hours activity",
      "category": "other",
      "success": true,
      "response_time": 1174.9889850616455,
      "sql": "SELECT * FROM AuditLogs WITH (NOLOCK) WHERE Timestamp >= DATEADD(HOUR, -24, GETDATE())",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 10,
      "query": "3am system usage",
      "category": "other",
      "success": true,
      "response_time": 1157.3753356933594,
      "sql": "SELECT COUNT(*) FROM Students WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 11,
      "query": "part-time vs full-time students",
      "category": "other",
      "success": true,
      "response_time": 1962.655782699585,
      "sql": "SELECT \n    CASE \n        WHEN s.IsGovernmentLegalTutor = 1 THEN 'Part-Time' \n        ELSE 'Full-Time' \n    END AS StudentType, \n    COUNT(DISTINCT s.Id) AS StudentCount \nFROM \n    Students s WITH (NOLOCK) \nGROUP BY \n    CASE \n        WHEN s.IsGovernmentLegalTutor = 1 THEN 'Part-Time' \n        ELSE 'Full-Time' \n    END",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 12,
      "query": "inconsistent status",
      "category": "status",
      "success": true,
      "response_time": 2134.0136528015137,
      "sql": "SELECT DISTINCT sd.Status \nFROM StudentDocuments sd WITH (NOLOCK)\nJOIN Students s ON sd.StudentId = s.Id\nWHERE sd.IsActive = 1 AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 13,
      "query": "after hours submissions",
      "category": "other",
      "success": true,
      "response_time": 2083.486557006836,
      "sql": "SELECT d.Id, d.StudentId, d.TotalDocuments, d.Status, d.SubmittedAt \nFROM DocumentSubmissions d WITH (NOLOCK) \nWHERE d.SubmittedAt > CAST(CONVERT(VARCHAR, GETDATE(), 112) + ' 17:00:00' AS DATETIME) \nAND d.IsComplete = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 14,
      "query": "guardian assignments",
      "category": "other",
      "success": true,
      "response_time": 1998.6662864685059,
      "sql": "SELECT * FROM FamilyMembers WITH (NOLOCK) WHERE IsDeceased = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 15,
      "query": "average age of students",
      "category": "aggregation",
      "success": true,
      "response_time": 1223.3240604400635,
      "sql": "SELECT AVG(DATEDIFF(YEAR, DateOfBirth, GETDATE())) AS AverageAge FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 16,
      "query": "backdated submissions",
      "category": "temporal",
      "success": true,
      "response_time": 1835.841417312622,
      "sql": "SELECT ds.Id, ds.StudentId, ds.TotalDocuments, ds.Status, ds.SubmittedAt \nFROM DocumentSubmissions ds WITH (NOLOCK) \nWHERE ds.SubmittedAt < DATEADD(YEAR, -1, GETDATE()) AND ds.IsComplete = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 17,
      "query": "duplicate entries detection",
      "category": "other",
      "success": true,
      "response_time": 1901.702642440796,
      "sql": "SELECT StudentId, DocumentName, COUNT(*) AS DuplicateCount \nFROM StudentDocuments WITH (NOLOCK) \nGROUP BY StudentId, DocumentName \nHAVING COUNT(*) > 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 18,
      "query": "unborn applicants",
      "category": "other",
      "success": true,
      "response_time": 1495.0096607208252,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName, s.DateOfBirth, s.Email \nFROM Students s WITH (NOLOCK) \nWHERE s.DateOfBirth > GETDATE() AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 19,
      "query": "yo check the fam members count",
      "category": "counting",
      "success": true,
      "response_time": 1225.5067825317383,
      "sql": "SELECT COUNT(*) FROM FamilyMembers WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 20,
      "query": "average family income",
      "category": "aggregation",
      "success": true,
      "response_time": 1348.076343536377,
      "sql": "SELECT AVG(AnnualIncome) AS AverageFamilyIncome FROM FamilyMembers WITH (NOLOCK) WHERE IsDeceased = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 21,
      "query": "occupations by frequency",
      "category": "grouping",
      "success": true,
      "response_time": 1788.9561653137207,
      "sql": "SELECT OccupationId, COUNT(*) AS Frequency \nFROM FamilyMembers WITH (NOLOCK) \nGROUP BY OccupationId",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 22,
      "query": "related audit entries",
      "category": "other",
      "success": true,
      "response_time": 1569.9517726898193,
      "sql": "SELECT a.* \nFROM AuditLogs a WITH (NOLOCK) \nJOIN Students s WITH (NOLOCK) ON a.StudentId = s.Id \nWHERE s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 23,
      "query": "pi appearances in data",
      "category": "other",
      "success": true,
      "response_time": 3410.315990447998,
      "sql": "SELECT COUNT(*) FROM Students WITH (NOLOCK) WHERE FirstName LIKE '%pi%' OR LastName LIKE '%pi%' OR MiddleName LIKE '%pi%' OR SecondLastName LIKE '%pi%' OR Email LIKE '%pi%' OR MobilePhone LIKE '%pi%' OR HomePhone LIKE '%pi%' OR AddressLine1 LIKE '%pi%' OR AddressLine2 LIKE '%pi%' OR Municipality LIKE '%pi%' OR ZipCode LIKE '%pi%' OR HighSchoolName LIKE '%pi%' OR HighSchoolMunicipality LIKE '%pi%' OR DriversLicense LIKE '%pi%' OR PostalAddressLine1 LIKE '%pi%' OR PostalAddressLine2 LIKE '%pi%' OR StudentEmail LIKE '%pi%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 24,
      "query": "hourly distribution",
      "category": "other",
      "success": true,
      "response_time": 1478.0094623565674,
      "sql": "SELECT DATEPART(HOUR, SubmittedAt) AS Hour, COUNT(*) AS TotalSubmissions\nFROM DocumentSubmissions WITH (NOLOCK)\nWHERE IsComplete = 1\nGROUP BY DATEPART(HOUR, SubmittedAt)\nORDER BY Hour",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 25,
      "query": "cross-referenced documents",
      "category": "other",
      "success": true,
      "response_time": 1903.1891822814941,
      "sql": "SELECT DISTINCT sd.Id, sd.DocumentName, sd.StudentId \nFROM StudentDocuments sd WITH (NOLOCK)\nJOIN StudentDocuments sd2 WITH (NOLOCK) ON sd.Id = sd2.ParentDocumentId\nWHERE sd.IsActive = 1 AND sd2.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 26,
      "query": "cohort analysis joins",
      "category": "joining",
      "success": true,
      "response_time": 1603.7442684173584,
      "sql": "SELECT s.Id, s.FirstName, s.LastName, sa.ApplicationNumber, sa.Status\nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nWHERE s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 27,
      "query": "stale submissions",
      "category": "other",
      "success": true,
      "response_time": 1602.8773784637451,
      "sql": "SELECT DISTINCT ds.Id \nFROM DocumentSubmissions ds WITH (NOLOCK) \nWHERE ds.Status = 'Stale' AND ds.IsComplete = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 28,
      "query": "students with incomplete applications",
      "category": "other",
      "success": true,
      "response_time": 1476.1598110198975,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nWHERE sa.Status <> 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 29,
      "query": "most common last names",
      "category": "other",
      "success": true,
      "response_time": 1225.8038520812988,
      "sql": "SELECT LastName, COUNT(*) AS NameCount \nFROM Students WITH (NOLOCK) \nGROUP BY LastName \nORDER BY NameCount DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 30,
      "query": "anomaly detection",
      "category": "other",
      "success": true,
      "response_time": 1523.794174194336,
      "sql": "SELECT DISTINCT sd.Id \nFROM StudentDocuments sd WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON sd.StudentId = s.Id\nWHERE sd.IsActive = 1 \nAND s.IsActive = 1 \nAND sd.Status NOT IN ('Verified', 'Approved')",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 31,
      "query": "friday the 13th applications",
      "category": "other",
      "success": true,
      "response_time": 1430.5307865142822,
      "sql": "SELECT a.* \nFROM ScholarshipApplications a WITH (NOLOCK)\nWHERE MONTH(a.SubmittedAt) = 10 AND DAY(a.SubmittedAt) = 13 AND YEAR(a.SubmittedAt) = 2023",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 32,
      "query": "unlucky 13 in records",
      "category": "other",
      "success": true,
      "response_time": 1237.0471954345703,
      "sql": "SELECT COUNT(*) FROM (SELECT DISTINCT Id FROM Students WITH (NOLOCK) WHERE IsActive = 1) AS Unlucky13 WHERE Id % 13 = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 33,
      "query": "count students by city",
      "category": "counting",
      "success": true,
      "response_time": 500.92601776123047,
      "sql": "SELECT COUNT(*) AS total FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 34,
      "query": "find zombie students",
      "category": "bizarre",
      "success": true,
      "response_time": 1767.5480842590332,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK)\nLEFT JOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nLEFT JOIN DocumentSubmissions ds WITH (NOLOCK) ON s.Id = ds.StudentId\nWHERE sa.Id IS NULL AND ds.Id IS NULL AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 35,
      "query": "limit testing",
      "category": "other",
      "success": true,
      "response_time": 1140.4693126678467,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 36,
      "query": "missing documents",
      "category": "other",
      "success": true,
      "response_time": 1605.2567958831787,
      "sql": "SELECT DISTINCT sd.Id \nFROM StudentDocuments sd WITH (NOLOCK)\nLEFT JOIN StudentDocumemtsCepe sdc ON sd.Id = sdc.ParentDocumentId\nWHERE sd.IsActive = 1 AND sdc.Id IS NULL",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 37,
      "query": "count regions in database",
      "category": "counting",
      "success": true,
      "response_time": 482.8310012817383,
      "sql": "SELECT COUNT(*) AS total FROM Regions WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 38,
      "query": "sequential id patterns",
      "category": "other",
      "success": true,
      "response_time": 1085.8874320983887,
      "sql": "SELECT ROW_NUMBER() OVER (ORDER BY Id) AS SequentialId, Id FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 39,
      "query": "hexadecimal references",
      "category": "other",
      "success": true,
      "response_time": 5780.947923660278,
      "sql": "SELECT * FROM StudentDocuments WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 40,
      "query": "wassup with approved apps",
      "category": "status",
      "success": true,
      "response_time": 1155.8740139007568,
      "sql": "SELECT * FROM ScholarshipApplications sa WITH (NOLOCK) WHERE sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 41,
      "query": "rollback candidates",
      "category": "temporal",
      "success": true,
      "response_time": 1267.4548625946045,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nWHERE sa.Status = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 42,
      "query": "escalated cases",
      "category": "other",
      "success": true,
      "response_time": 1195.976972579956,
      "sql": "SELECT * FROM ScholarshipApplications sa WITH (NOLOCK)\nJOIN Students s ON sa.StudentId = s.Id\nWHERE sa.Status = 2 AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 43,
      "query": "shortest email address",
      "category": "other",
      "success": true,
      "response_time": 1083.9760303497314,
      "sql": "SELECT TOP 1 Email FROM Students WITH (NOLOCK) ORDER BY LEN(Email) ASC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 44,
      "query": "most documents submitted",
      "category": "other",
      "success": true,
      "response_time": 1242.640733718872,
      "sql": "SELECT StudentId, COUNT(*) AS DocumentCount \nFROM DocumentSubmissions WITH (NOLOCK) \nGROUP BY StudentId \nORDER BY DocumentCount DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 45,
      "query": "error state records",
      "category": "other",
      "success": true,
      "response_time": 1038.4488105773926,
      "sql": "SELECT * FROM AuditLogs WITH (NOLOCK) WHERE Action = 'error'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 46,
      "query": "total questions in system",
      "category": "other",
      "success": true,
      "response_time": 986.7901802062988,
      "sql": "SELECT COUNT(*) FROM StudentDocuments WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 47,
      "query": "threshold breaches",
      "category": "other",
      "success": true,
      "response_time": 1147.799015045166,
      "sql": "SELECT COUNT(*) \nFROM StudentDocuments WITH (NOLOCK) \nWHERE IsActive = 1 AND Status = 'breach'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 48,
      "query": "fastest approval time",
      "category": "other",
      "success": true,
      "response_time": 1341.6082859039307,
      "sql": "SELECT AVG(DATEDIFF(DAY, SubmittedAt, ApprovedAt)) AS FastestApprovalTime\nFROM ScholarshipApplications WITH (NOLOCK)\nWHERE ApprovedAt IS NOT NULL",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 49,
      "query": "smallest complete application",
      "category": "other",
      "success": true,
      "response_time": 1299.145221710205,
      "sql": "SELECT TOP 1 * FROM ScholarshipApplication sa WITH (NOLOCK) \nJOIN Students s ON sa.StudentId = s.Id \nORDER BY sa.CreatedAt ASC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 50,
      "query": "monthly application submissions",
      "category": "temporal",
      "success": true,
      "response_time": 1855.5419445037842,
      "sql": "SELECT COUNT(DISTINCT sa.Id) \nFROM ScholarshipApplication sa WITH (NOLOCK) \nWHERE sa.SubmittedAt >= DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0) \nAND sa.SubmittedAt < DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()) + 1, 0) \nAND sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 51,
      "query": "quarter-over-quarter growth",
      "category": "other",
      "success": true,
      "response_time": 1868.4039115905762,
      "sql": "SELECT \n    DATEPART(QUARTER, SubmittedAt) AS Quarter, \n    YEAR(SubmittedAt) AS Year, \n    COUNT(DISTINCT Id) AS TotalApplications\nFROM \n    ScholarshipApplications WITH (NOLOCK)\nWHERE \n    SubmittedAt >= DATEADD(YEAR, -1, GETDATE())\nGROUP BY \n    DATEPART(QUARTER, SubmittedAt), \n    YEAR(SubmittedAt)\nORDER BY \n    Year, Quarter",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 52,
      "query": "stuck in pipeline",
      "category": "other",
      "success": true,
      "response_time": 1481.9464683532715,
      "sql": "SELECT COUNT(DISTINCT sa.Id) \nFROM ScholarshipApplication sa WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON sa.StudentId = s.Id\nWHERE sa.Status = 'stuck in pipeline' AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 53,
      "query": "single students without dependents",
      "category": "other",
      "success": true,
      "response_time": 1363.8935089111328,
      "sql": "SELECT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK) \nLEFT JOIN FamilyMembers fm WITH (NOLOCK) ON s.Id = fm.StudentId \nWHERE fm.StudentId IS NULL",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 54,
      "query": "weekend only submissions",
      "category": "other",
      "success": true,
      "response_time": 1880.3277015686035,
      "sql": "SELECT * FROM DocumentSubmissions WITH (NOLOCK) \nWHERE DATEPART(dw, SubmittedAt) IN (1, 7)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 55,
      "query": "upcoming application deadlines",
      "category": "other",
      "success": true,
      "response_time": 1417.7541732788086,
      "sql": "SELECT DISTINCT sa.ApplicationNumber, sa.SubmittedAt, sa.AcademicYear \nFROM ScholarshipApplication sa WITH (NOLOCK) \nWHERE sa.SubmittedAt > GETDATE() \nORDER BY sa.SubmittedAt",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 56,
      "query": "count all the students please",
      "category": "counting",
      "success": true,
      "response_time": 508.06593894958496,
      "sql": "SELECT COUNT(*) AS total FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 57,
      "query": "students per high school",
      "category": "other",
      "success": true,
      "response_time": 1503.9172172546387,
      "sql": "SELECT HighSchools.Name AS HighSchoolName, COUNT(DISTINCT Students.Id) AS StudentCount\nFROM HighSchools WITH (NOLOCK)\nLEFT JOIN Students WITH (NOLOCK) ON HighSchools.Id = Students.HighSchoolId\nGROUP BY HighSchools.Name",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 58,
      "query": "null byte injection tests",
      "category": "grouping",
      "success": true,
      "response_time": 1808.7871074676514,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE Email LIKE '%' + CHAR(0) + '%' OR FirstName LIKE '%' + CHAR(0) + '%' OR LastName LIKE '%' + CHAR(0) + '%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 59,
      "query": "Would you kindly retrieve student information",
      "category": "other",
      "success": true,
      "response_time": 492.551326751709,
      "sql": "SELECT COUNT(DISTINCT s.Id) AS total \n                          FROM Students s WITH (NOLOCK) \n                          LEFT JOIN Cities c1 WITH (NOLOCK) ON s.CityIdPhysical = c1.Id \n                          LEFT JOIN Cities c2 WITH (NOLOCK) ON s.CityIdPostal = c2.Id \n                          WHERE c1.Name LIKE '%Would you kindly retrieve student information%' \n                             OR c2.Name LIKE '%Would you kindly retrieve student information%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 60,
      "query": "batch application groups",
      "category": "grouping",
      "success": true,
      "response_time": 1691.3156509399414,
      "sql": "SELECT DISTINCT sa.ApplicationNumber, sa.StudentId, sa.Status \nFROM ScholarshipApplication sa WITH (NOLOCK) \nJOIN Students s WITH (NOLOCK) ON sa.StudentId = s.Id \nWHERE s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 61,
      "query": "popular cities for students",
      "category": "other",
      "success": true,
      "response_time": 1675.9521961212158,
      "sql": "SELECT c.Name, COUNT(DISTINCT s.Id) AS StudentCount\nFROM Cities c WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON c.Id = s.CityIdPhysical\nWHERE c.IsActive = 1\nGROUP BY c.Name\nORDER BY StudentCount DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 62,
      "query": "students with multiple applications",
      "category": "other",
      "success": true,
      "response_time": 1895.0791358947754,
      "sql": "SELECT s.Id, s.FirstName, s.LastName, COUNT(DISTINCT sa.Id) AS ApplicationCount\nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nGROUP BY s.Id, s.FirstName, s.LastName\nHAVING COUNT(DISTINCT sa.Id) > 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 63,
      "query": "connected user sessions",
      "category": "other",
      "success": true,
      "response_time": 1159.3832969665527,
      "sql": "SELECT * FROM AspNetUserTokens WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 64,
      "query": "slowest processing case",
      "category": "other",
      "success": true,
      "response_time": 1627.6397705078125,
      "sql": "SELECT COUNT(DISTINCT sd.Id) \nFROM StudentDocuments sd WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON sd.StudentId = s.Id\nJOIN DocumentSubmissions ds WITH (NOLOCK) ON sd.SubmissionId = ds.Id\nWHERE sd.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 65,
      "query": "full moon submissions",
      "category": "other",
      "success": true,
      "response_time": 1423.2549667358398,
      "sql": "SELECT ds.Id, ds.StudentId, ds.TotalDocuments, ds.Status, ds.SubmittedAt \nFROM DocumentSubmissions ds WITH (NOLOCK) \nWHERE ds.Status = 'Full Moon'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 66,
      "query": "family members birthday this week",
      "category": "other",
      "success": true,
      "response_time": 1482.4767112731934,
      "sql": "SELECT * FROM FamilyMembers WITH (NOLOCK) \nWHERE DATEPART(WEEK, DateOfBirth) = DATEPART(WEEK, GETDATE()) \nAND DATEPART(YEAR, DateOfBirth) = DATEPART(YEAR, GETDATE()) \nAND IsDeceased = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 67,
      "query": "gender distribution",
      "category": "other",
      "success": true,
      "response_time": 1128.5810470581055,
      "sql": "SELECT Gender, COUNT(*) AS GenderCount \nFROM Students WITH (NOLOCK) \nGROUP BY Gender",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 68,
      "query": "largest family in system",
      "category": "other",
      "success": true,
      "response_time": 1299.689531326294,
      "sql": "SELECT TOP 1 StudentId, COUNT(*) AS FamilyCount \nFROM FamilyMembers WITH (NOLOCK) \nGROUP BY StudentId \nORDER BY COUNT(*) DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 69,
      "query": "most common first names",
      "category": "other",
      "success": true,
      "response_time": 1304.5501708984375,
      "sql": "SELECT FirstName, COUNT(*) AS NameCount \nFROM Students WITH (NOLOCK) \nGROUP BY FirstName \nORDER BY NameCount DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 70,
      "query": "documents per student average",
      "category": "aggregation",
      "success": true,
      "response_time": 1558.701992034912,
      "sql": "SELECT StudentId, AVG(DocumentCount) AS AverageDocuments\nFROM (\n    SELECT StudentId, COUNT(*) AS DocumentCount\n    FROM StudentDocuments WITH (NOLOCK)\n    WHERE IsActive = 1\n    GROUP BY StudentId\n) AS DocumentCounts\nGROUP BY StudentId",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 71,
      "query": "lemme see those high schools",
      "category": "other",
      "success": true,
      "response_time": 1250.237226486206,
      "sql": "SELECT * FROM HighSchools WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 72,
      "query": "future dated applications",
      "category": "temporal",
      "success": true,
      "response_time": 1075.286865234375,
      "sql": "SELECT * FROM ScholarshipApplication WITH (NOLOCK) WHERE SubmittedAt > GETDATE()",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 73,
      "query": "draft applications older than 30 days",
      "category": "other",
      "success": true,
      "response_time": 1341.1247730255127,
      "sql": "SELECT * FROM ScholarshipApplication WITH (NOLOCK) \nWHERE Status = 0 AND SubmittedAt < DATEADD(DAY, -30, GETDATE())",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 74,
      "query": "family members per student average",
      "category": "aggregation",
      "success": true,
      "response_time": 1249.2051124572754,
      "sql": "SELECT StudentId, AVG(AnnualIncome) AS AverageAnnualIncome\nFROM FamilyMembers WITH (NOLOCK)\nGROUP BY StudentId",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 75,
      "query": "how many family members total",
      "category": "counting",
      "success": true,
      "response_time": 984.8411083221436,
      "sql": "SELECT COUNT(*) FROM FamilyMembers WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 76,
      "query": "students born on leap year",
      "category": "temporal",
      "success": true,
      "response_time": 1655.099868774414,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE DATEPART(YEAR, DateOfBirth) % 4 = 0 AND (DATEPART(YEAR, DateOfBirth) % 100 <> 0 OR DATEPART(YEAR, DateOfBirth) % 400 = 0)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 77,
      "query": "total roles defined",
      "category": "other",
      "success": true,
      "response_time": 1138.4611129760742,
      "sql": "SELECT COUNT(*) FROM AspNetRoles WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 78,
      "query": "family size distribution",
      "category": "other",
      "success": true,
      "response_time": 1231.6615581512451,
      "sql": "SELECT COUNT(*) AS FamilySize, COUNT(DISTINCT StudentId) AS NumberOfFamilies\nFROM FamilyMembers WITH (NOLOCK)\nGROUP BY StudentId",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 79,
      "query": "ghost records with null everything",
      "category": "bizarre",
      "success": true,
      "response_time": 5100.323677062988,
      "sql": "SELECT * FROM Students WITH (NOLOCK) \nWHERE FirstName IS NULL \nAND MiddleName IS NULL \nAND LastName IS NULL \nAND SecondLastName IS NULL \nAND DateOfBirth IS NULL \nAND Email IS NULL \nAND MobilePhone IS NULL \nAND HomePhone IS NULL \nAND AddressLine1 IS NULL \nAND AddressLine2 IS NULL \nAND Municipality IS NULL \nAND ZipCode IS NULL \nAND HighSchoolName IS NULL \nAND HighSchoolMunicipality IS NULL \nAND GraduationDate IS NULL \nAND GPA IS NULL \nAND CollegeBoardScore IS NULL \nAND CollegeBoardDate IS NULL \nAND CreatedAt IS NULL \nAND UpdatedAt IS NULL \nAND UserId IS NULL \nAND UserId1 IS NULL \nAND CityIdPhysical IS NULL \nAND CityIdPostal IS NULL \nAND DriversLicense IS NULL \nAND PostalAddressLine1 IS NULL \nAND PostalAddressLine2 IS NULL \nAND PostalZipCode IS NULL \nAND HighSchoolId IS NULL \nAND MaritalStatus IS NULL \nAND OccupationId IS NULL \nAND CreatedBy IS NULL \nAND ModifiedBy IS NULL \nAND StudentEmail IS NULL \nAND StudentRecommendedId IS NULL \nAND UniversityId IS NULL \nAND UniversityMunicipioId IS NULL \nAND UniversityRegionId IS NULL \nAND UniversityCityId IS NULL \nAND IsGovernmentLegalTutor IS NULL \nAND IdentificationType IS NULL \nAND IdentificationNumber IS NULL \nAND SSN IS NULL",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 80,
      "query": "bottleneck detection",
      "category": "other",
      "success": true,
      "response_time": 2349.0428924560547,
      "sql": "SELECT \n    d.StudentId, \n    COUNT(DISTINCT d.Id) AS DocumentCount\nFROM \n    DocumentSubmissions ds WITH (NOLOCK)\nJOIN \n    Students s WITH (NOLOCK) ON ds.StudentId = s.Id\nJOIN \n    StudentDocuments d WITH (NOLOCK) ON d.StudentId = s.Id\nWHERE \n    ds.Status = 'Pending' \n    AND d.IsActive = 1\nGROUP BY \n    d.StudentId\nHAVING \n    COUNT(DISTINCT d.Id) > 5",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 81,
      "query": "count inactive students",
      "category": "counting",
      "success": true,
      "response_time": 483.3855628967285,
      "sql": "SELECT COUNT(*) AS total FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 82,
      "query": "boundary conditions",
      "category": "other",
      "success": true,
      "response_time": 1200.8795738220215,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 83,
      "query": "family members with occupations and students",
      "category": "other",
      "success": true,
      "response_time": 2202.3425102233887,
      "sql": "SELECT fm.*, o.Name AS OccupationName, s.FirstName AS StudentFirstName, s.LastName AS StudentLastName\nFROM FamilyMembers fm WITH (NOLOCK)\nJOIN Occupations o WITH (NOLOCK) ON fm.OccupationId = o.Id\nJOIN Students s WITH (NOLOCK) ON fm.StudentId = s.Id",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 84,
      "query": "buffer overflow test names",
      "category": "other",
      "success": true,
      "response_time": 1349.3902683258057,
      "sql": "SELECT DISTINCT DocumentName FROM StudentDocuments WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 85,
      "query": "local students from current city",
      "category": "other",
      "success": true,
      "response_time": 1847.848892211914,
      "sql": "SELECT DISTINCT s.* \nFROM Students s WITH (NOLOCK)\nJOIN Cities c WITH (NOLOCK) ON s.CityIdPhysical = c.Id\nWHERE c.IsActive = 1 AND s.IsGovernmentLegalTutor = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 86,
      "query": "students with their cities and regions",
      "category": "joining",
      "success": true,
      "response_time": 1932.4040412902832,
      "sql": "SELECT s.*, c.Name AS CityName, r.Region \nFROM Students s WITH (NOLOCK)\nJOIN Cities c WITH (NOLOCK) ON s.CityIdPhysical = c.Id\nJOIN Municipios m WITH (NOLOCK) ON c.MunicipioId = m.Id\nJOIN Regions r WITH (NOLOCK) ON m.Code = r.Municipio",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 87,
      "query": "I need to know about applications status",
      "category": "status",
      "success": true,
      "response_time": 1764.6520137786865,
      "sql": "SELECT a.Id, a.ApplicationNumber, a.Status, a.SubmittedAt, s.FirstName, s.LastName \nFROM ScholarshipApplication a WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON a.StudentId = s.Id",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 88,
      "query": "rejected with reasons",
      "category": "status",
      "success": true,
      "response_time": 1273.411750793457,
      "sql": "SELECT r.Id, r.RejectionReason \nFROM StudentRecommendeds r WITH (NOLOCK) \nWHERE r.IsPreapproved = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 89,
      "query": "gimme all dem students yo",
      "category": "other",
      "success": true,
      "response_time": 1478.3451557159424,
      "sql": "SELECT * FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 90,
      "query": "can u plz count students 4 me",
      "category": "counting",
      "success": true,
      "response_time": 499.61090087890625,
      "sql": "SELECT COUNT(*) AS total FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 91,
      "query": "students from same high school",
      "category": "other",
      "success": true,
      "response_time": 2320.3845024108887,
      "sql": "SELECT s1.* \nFROM Students s1 WITH (NOLOCK)\nJOIN Students s2 WITH (NOLOCK) ON s1.HighSchoolId = s2.HighSchoolId\nWHERE s1.Id <> s2.Id",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 92,
      "query": "pending approval applications",
      "category": "status",
      "success": true,
      "response_time": 1356.2874794006348,
      "sql": "SELECT a.Id, a.ApplicationNumber, a.StudentId, a.Status, a.SubmittedAt \nFROM ScholarshipApplications a WITH (NOLOCK) \nWHERE a.Status = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 93,
      "query": "emergency contacts for students",
      "category": "other",
      "success": true,
      "response_time": 1603.9023399353027,
      "sql": "SELECT fm.FirstName, fm.LastName, fm.Relationship, fm.Phone \nFROM FamilyMembers fm WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON fm.StudentId = s.Id\nWHERE s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 94,
      "query": "perfect square record counts",
      "category": "counting",
      "success": true,
      "response_time": 1426.3489246368408,
      "sql": "SELECT COUNT(*) FROM (SELECT Id FROM Students WITH (NOLOCK) WHERE SQRT(CAST(Id AS BIGINT)) = CAST(SQRT(CAST(Id AS BIGINT)) AS INT)) AS PerfectSquares",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 95,
      "query": "students grouped by age ranges",
      "category": "grouping",
      "success": true,
      "response_time": 4715.884685516357,
      "sql": "SELECT \n    CASE \n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) < 18 THEN 'Under 18'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) BETWEEN 18 AND 24 THEN '18-24'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) BETWEEN 25 AND 34 THEN '25-34'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) BETWEEN 35 AND 44 THEN '35-44'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) BETWEEN 45 AND 54 THEN '45-54'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) >= 55 THEN '55 and above'\n    END AS AgeRange,\n    COUNT(*) AS StudentCount\nFROM Students WITH (NOLOCK)\nGROUP BY \n    CASE \n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) < 18 THEN 'Under 18'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) BETWEEN 18 AND 24 THEN '18-24'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) BETWEEN 25 AND 34 THEN '25-34'\n        WHEN DATEDIFF(YEAR, DateOfBirth, GETDATE()) BETWEEN 35 AND 44 THEN '35-44'\n        WHEN DATEDIFF(YEAR,",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 96,
      "query": "holiday period applications",
      "category": "other",
      "success": true,
      "response_time": 1706.3252925872803,
      "sql": "SELECT a.ApplicationNumber, a.StudentId, a.Status, a.SubmittedAt\nFROM ScholarshipApplication a WITH (NOLOCK)\nWHERE a.Status = 1 AND a.SubmittedAt BETWEEN '2023-12-01' AND '2023-12-31'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 97,
      "query": "least populated regions",
      "category": "other",
      "success": true,
      "response_time": 1558.0358505249023,
      "sql": "SELECT r.Id, r.Region, COUNT(s.Id) AS StudentCount\nFROM Regions r\nLEFT JOIN Students s ON r.Id = s.UniversityRegionId\nGROUP BY r.Id, r.Region\nORDER BY StudentCount ASC\nWITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 98,
      "query": "graduated students with honors",
      "category": "other",
      "success": true,
      "response_time": 1427.2980690002441,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName, s.GPA \nFROM Students s WITH (NOLOCK) \nWHERE s.GPA >= 3.5",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 99,
      "query": "show me whatcha got on cities",
      "category": "selection",
      "success": true,
      "response_time": 1265.8498287200928,
      "sql": "SELECT * FROM Cities WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 100,
      "query": "students with exactly 2 dependents",
      "category": "other",
      "success": true,
      "response_time": 1955.2795886993408,
      "sql": "SELECT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK)\nJOIN FamilyMembers fm WITH (NOLOCK) ON s.Id = fm.StudentId\nGROUP BY s.Id, s.FirstName, s.LastName\nHAVING COUNT(fm.Id) = 2",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 101,
      "query": "students born this month",
      "category": "temporal",
      "success": true,
      "response_time": 1409.9574089050293,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE MONTH(DateOfBirth) = MONTH(GETDATE()) AND YEAR(DateOfBirth) = YEAR(GETDATE())",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 102,
      "query": "most active day",
      "category": "other",
      "success": true,
      "response_time": 1710.0718021392822,
      "sql": "SELECT TOP 1 CAST(SubmittedAt AS DATE) AS ActiveDay, COUNT(*) AS ActivityCount\nFROM DocumentSubmissions WITH (NOLOCK)\nWHERE IsComplete = 1\nGROUP BY CAST(SubmittedAt AS DATE)\nORDER BY COUNT(*) DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 103,
      "query": "students sharing same address",
      "category": "other",
      "success": true,
      "response_time": 2296.536445617676,
      "sql": "SELECT s1.Id, s1.FirstName, s1.LastName, s1.AddressLine1, s1.AddressLine2, s1.ZipCode\nFROM Students s1 WITH (NOLOCK)\nJOIN Students s2 WITH (NOLOCK) ON s1.AddressLine1 = s2.AddressLine1 AND s1.AddressLine2 = s2.AddressLine2 AND s1.ZipCode = s2.ZipCode\nWHERE s1.Id <> s2.Id",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 104,
      "query": "least active user",
      "category": "other",
      "success": true,
      "response_time": 1701.1597156524658,
      "sql": "SELECT TOP 1 Id, FirstName, LastName, COUNT(*) AS ActivityCount \nFROM AspNetUsers WITH (NOLOCK) \nLEFT JOIN AuditLogs WITH (NOLOCK) ON AspNetUsers.Id = AuditLogs.UserId \nGROUP BY Id, FirstName, LastName \nORDER BY ActivityCount ASC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 105,
      "query": "which students have no family",
      "category": "other",
      "success": true,
      "response_time": 1531.6157341003418,
      "sql": "SELECT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK) \nLEFT JOIN FamilyMembers fm WITH (NOLOCK) ON s.Id = fm.StudentId \nWHERE fm.Id IS NULL",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 106,
      "query": "readmitted students",
      "category": "other",
      "success": true,
      "response_time": 1752.1231174468994,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName, s.Email \nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nWHERE sa.Status = 1 AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 107,
      "query": "students on academic probation",
      "category": "other",
      "success": true,
      "response_time": 1462.7337455749512,
      "sql": "SELECT s.* \nFROM Students s WITH (NOLOCK) \nWHERE s.GPA < 2.0 AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 108,
      "query": "family members over 65 years old",
      "category": "temporal",
      "success": true,
      "response_time": 1318.4165954589844,
      "sql": "SELECT * FROM FamilyMembers WITH (NOLOCK) WHERE DATEDIFF(YEAR, DateOfBirth, GETDATE()) > 65",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 109,
      "query": "weekly cycles",
      "category": "other",
      "success": true,
      "response_time": 1919.8784828186035,
      "sql": "SELECT COUNT(*) FROM StudentDocuments WITH (NOLOCK) WHERE IsActive = 1 AND CreatedAt >= DATEADD(WEEK, DATEDIFF(WEEK, 0, GETDATE()), 0) AND CreatedAt < DATEADD(WEEK, DATEDIFF(WEEK, 0, GETDATE()) + 1, 0)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 110,
      "query": "how many users in aspnet",
      "category": "counting",
      "success": true,
      "response_time": 971.3726043701172,
      "sql": "SELECT COUNT(*) FROM AspNetUsers WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 111,
      "query": "applications submitted today",
      "category": "temporal",
      "success": true,
      "response_time": 1378.7248134613037,
      "sql": "SELECT * FROM ScholarshipApplication WITH (NOLOCK) WHERE CAST(SubmittedAt AS DATE) = CAST(GETDATE() AS DATE)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 112,
      "query": "multi-generational family trees",
      "category": "other",
      "success": true,
      "response_time": 3363.8672828674316,
      "sql": "SELECT \n    fm1.FirstName AS ParentFirstName,\n    fm1.LastName AS ParentLastName,\n    fm1.Relationship AS ParentRelationship,\n    fm2.FirstName AS ChildFirstName,\n    fm2.LastName AS ChildLastName,\n    fm2.Relationship AS ChildRelationship\nFROM \n    FamilyMembers fm1 WITH (NOLOCK)\nJOIN \n    FamilyMembers fm2 WITH (NOLOCK) ON fm1.StudentId = fm2.StudentId\nWHERE \n    fm1.IsDeceased = 0 AND fm2.IsDeceased = 0\nORDER BY \n    fm1.LastName, fm1.FirstName, fm2.LastName, fm2.FirstName",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 113,
      "query": "show twins in the system",
      "category": "selection",
      "success": true,
      "response_time": 1960.935354232788,
      "sql": "SELECT s1.Id, s1.FirstName, s1.LastName, s1.DateOfBirth\nFROM Students s1 WITH (NOLOCK)\nJOIN Students s2 WITH (NOLOCK) ON s1.DateOfBirth = s2.DateOfBirth AND s1.Id <> s2.Id\nORDER BY s1.DateOfBirth",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 114,
      "query": "peak usage time",
      "category": "other",
      "success": true,
      "response_time": 1462.3980522155762,
      "sql": "SELECT DATEPART(HOUR, SubmittedAt) AS PeakHour, COUNT(*) AS UsageCount\nFROM DocumentSubmissions WITH (NOLOCK)\nGROUP BY DATEPART(HOUR, SubmittedAt)\nORDER BY UsageCount DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 115,
      "query": "demographic breakdown by city",
      "category": "grouping",
      "success": true,
      "response_time": 1742.2504425048828,
      "sql": "SELECT c.Name AS CityName, COUNT(DISTINCT s.Id) AS StudentCount\nFROM Cities c WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON c.Id = s.CityIdPhysical\nWHERE c.IsActive = 1\nGROUP BY c.Name",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 116,
      "query": "how many cities exist?",
      "category": "counting",
      "success": true,
      "response_time": 1087.5132083892822,
      "sql": "SELECT COUNT(*) FROM Cities WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 117,
      "query": "students with same last name as family",
      "category": "other",
      "success": true,
      "response_time": 2713.048219680786,
      "sql": "SELECT s.* \nFROM Students s WITH (NOLOCK)\nJOIN FamilyMembers f WITH (NOLOCK) ON s.LastName = f.LastName",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 118,
      "query": "siblings in the system",
      "category": "other",
      "success": true,
      "response_time": 1824.8305320739746,
      "sql": "SELECT DISTINCT f.FirstName, f.LastName, f.Relationship \nFROM FamilyMembers f WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON f.StudentId = s.Id\nWHERE f.IsDeceased = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 119,
      "query": "daily peaks",
      "category": "other",
      "success": true,
      "response_time": 1622.0154762268066,
      "sql": "SELECT COUNT(*) \nFROM DocumentSubmissions ds WITH (NOLOCK)\nWHERE ds.SubmittedAt >= CAST(GETDATE() AS DATE) \nAND ds.SubmittedAt < DATEADD(DAY, 1, CAST(GETDATE() AS DATE)) \nAND ds.IsComplete = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 120,
      "query": "recent audit logs",
      "category": "other",
      "success": true,
      "response_time": 2408.980369567871,
      "sql": "SELECT * FROM AuditLogs WITH (NOLOCK) ORDER BY Timestamp DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 121,
      "query": "total number of family members",
      "category": "other",
      "success": true,
      "response_time": 1162.9748344421387,
      "sql": "SELECT COUNT(*) FROM FamilyMembers WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 122,
      "query": "expired documents",
      "category": "other",
      "success": true,
      "response_time": 1236.5148067474365,
      "sql": "SELECT * FROM StudentDocuments WITH (NOLOCK) WHERE ExpirationDate < GETDATE() AND IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 123,
      "query": "seasonal patterns",
      "category": "other",
      "success": true,
      "response_time": 3800.055742263794,
      "sql": "SELECT * FROM StudentDocuments WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 124,
      "query": "yearly enrollment trends",
      "category": "temporal",
      "success": true,
      "response_time": 1623.412847518921,
      "sql": "SELECT YEAR(SubmittedAt) AS EnrollmentYear, COUNT(DISTINCT StudentId) AS TotalEnrollments\nFROM ScholarshipApplication WITH (NOLOCK)\nGROUP BY YEAR(SubmittedAt)\nORDER BY EnrollmentYear",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 125,
      "query": "count municipios",
      "category": "counting",
      "success": true,
      "response_time": 566.3425922393799,
      "sql": "SELECT COUNT(*) AS total FROM Municipios WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 126,
      "query": "circular family references",
      "category": "other",
      "success": true,
      "response_time": 2360.0285053253174,
      "sql": "SELECT DISTINCT f1.Id, f1.FirstName, f1.LastName, f2.Id AS RelatedId, f2.FirstName AS RelatedFirstName, f2.LastName AS RelatedLastName\nFROM FamilyMembers f1 WITH (NOLOCK)\nJOIN FamilyMembers f2 WITH (NOLOCK) ON f1.StudentId = f2.StudentId AND f1.Id <> f2.Id\nWHERE f1.IsDeceased = 0 AND f2.IsDeceased = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 127,
      "query": "students with perfect attendance",
      "category": "other",
      "success": true,
      "response_time": 1568.0859088897705,
      "sql": "SELECT DISTINCT s.* \nFROM Students s WITH (NOLOCK)\nJOIN Attendance a WITH (NOLOCK) ON s.Id = a.StudentId\nWHERE a.AttendanceStatus = 'Perfect' AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 128,
      "query": "monthly trends",
      "category": "temporal",
      "success": true,
      "response_time": 1905.4007530212402,
      "sql": "SELECT \n    MONTH(SubmittedAt) AS Month, \n    COUNT(DISTINCT StudentId) AS TotalStudents \nFROM \n    ScholarshipApplications WITH (NOLOCK) \nWHERE \n    YEAR(SubmittedAt) = 2023 \nGROUP BY \n    MONTH(SubmittedAt) \nORDER BY \n    Month",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 129,
      "query": "applications from the past",
      "category": "other",
      "success": true,
      "response_time": 1355.8604717254639,
      "sql": "SELECT * FROM ScholarshipApplication sa WITH (NOLOCK) WHERE sa.SubmittedAt < GETDATE() AND sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 130,
      "query": "xss attempts in applications",
      "category": "other",
      "success": true,
      "response_time": 2321.4423656463623,
      "sql": "SELECT COUNT(DISTINCT a.Id) \nFROM ScholarshipApplication a WITH (NOLOCK) \nWHERE a.Notes LIKE '%<script>%' OR a.Notes LIKE '%javascript:%' OR a.Notes LIKE '%onerror=%' OR a.Notes LIKE '%onload=%' OR a.Notes LIKE '%<iframe>%' OR a.Notes LIKE '%<img src=%' OR a.Notes LIKE '%<object>%' OR a.Notes LIKE '%<embed>%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 131,
      "query": "morse code in names",
      "category": "other",
      "success": true,
      "response_time": 1515.4223442077637,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE FirstName LIKE '%.-%' OR MiddleName LIKE '%.-%' OR LastName LIKE '%.-%' OR SecondLastName LIKE '%.-%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 132,
      "query": "priority applications",
      "category": "other",
      "success": true,
      "response_time": 1724.7951030731201,
      "sql": "SELECT a.Id, a.ApplicationNumber, a.StudentId, a.AcademicYear, a.Status, a.SubmittedAt \nFROM ScholarshipApplications a WITH (NOLOCK) \nWHERE a.Status = 1 \nORDER BY a.SubmittedAt DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 133,
      "query": "invalid state transitions",
      "category": "other",
      "success": true,
      "response_time": 1661.9312763214111,
      "sql": "SELECT DISTINCT sa.Status, sa.ApprovedAt, sa.ReviewedAt \nFROM ScholarshipApplication sa WITH (NOLOCK) \nWHERE sa.Status NOT IN (1, 2, 3) \nAND sa.ApprovedAt IS NOT NULL \nAND sa.ReviewedAt IS NOT NULL",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 134,
      "query": "family members in multiple roles",
      "category": "other",
      "success": true,
      "response_time": 1597.5582599639893,
      "sql": "SELECT DISTINCT fm.Id, fm.FirstName, fm.LastName, fm.Relationship \nFROM FamilyMembers fm WITH (NOLOCK) \nWHERE fm.IsDeceased = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 135,
      "query": "incomplete profiles",
      "category": "other",
      "success": true,
      "response_time": 1696.835994720459,
      "sql": "SELECT s.Id, s.FirstName, s.LastName, s.Email, s.MobilePhone \nFROM Students s WITH (NOLOCK) \nWHERE (s.FirstName IS NULL OR s.LastName IS NULL OR s.Email IS NULL OR s.MobilePhone IS NULL) \nAND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 136,
      "query": "active students with approved applications",
      "category": "status",
      "success": true,
      "response_time": 1631.5357685089111,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nWHERE s.IsActive = 1 AND sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 137,
      "query": "international students",
      "category": "other",
      "success": true,
      "response_time": 1306.3747882843018,
      "sql": "SELECT s.* \nFROM Students s WITH (NOLOCK) \nWHERE s.IsGovernmentLegalTutor = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 138,
      "query": "students with both parents",
      "category": "other",
      "success": true,
      "response_time": 2117.680549621582,
      "sql": "SELECT DISTINCT s.* \nFROM Students s WITH (NOLOCK)\nJOIN FamilyMembers fm1 WITH (NOLOCK) ON s.Id = fm1.StudentId AND fm1.Relationship = 'Parent'\nJOIN FamilyMembers fm2 WITH (NOLOCK) ON s.Id = fm2.StudentId AND fm2.Relationship = 'Parent' \nWHERE s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 139,
      "query": "weekend vs weekday submissions",
      "category": "other",
      "success": true,
      "response_time": 2104.313611984253,
      "sql": "SELECT \n    CASE \n        WHEN DATEPART(WEEKDAY, SubmittedAt) IN (1, 7) THEN 'Weekend' \n        ELSE 'Weekday' \n    END AS SubmissionType,\n    COUNT(*) AS SubmissionCount\nFROM \n    DocumentSubmissions WITH (NOLOCK)\nGROUP BY \n    CASE \n        WHEN DATEPART(WEEKDAY, SubmittedAt) IN (1, 7) THEN 'Weekend' \n        ELSE 'Weekday' \n    END",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 140,
      "query": "lucky number 7 in ids",
      "category": "other",
      "success": true,
      "response_time": 1456.7675590515137,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE Id LIKE '%7%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 141,
      "query": "referral networks",
      "category": "other",
      "success": true,
      "response_time": 1101.5853881835938,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 142,
      "query": "emoji in text fields",
      "category": "other",
      "success": true,
      "response_time": 6289.570093154907,
      "sql": "SELECT * FROM StudentDocuments WITH (NOLOCK) WHERE DocumentName LIKE '%\ud83d\ude00%' OR Description LIKE '%\ud83d\ude00%' OR Notes LIKE '%\ud83d\ude00%' OR ReviewNotes LIKE '%\ud83d\ude00%' OR IssuingAuthority LIKE '%\ud83d\ude00%' OR DocumentNumber LIKE '%\ud83d\ude00%' OR OriginalFileName LIKE '%\ud83d\ude00%' OR ExtractedText LIKE '%\ud83d\ude00%' OR ExtractionError LIKE '%\ud83d\ude00%' OR ExtractionStatus LIKE '%\ud83d\ude00%' OR RejectionReason LIKE '%\ud83d\ude00%' OR RejectedBy LIKE '%\ud83d\ude00%' OR ReviewNotes LIKE '%\ud83d\ude00%' OR UploadedBy LIKE '%\ud83d\ude00%' OR FileName LIKE '%\ud83d\ude00%' OR ContentType LIKE '%\ud83d\ude00%' OR FilePath LIKE '%\ud83d\ude00%' OR BlobUrl LIKE '%\ud83d\ude00%' OR FileHash LIKE '%\ud83d\ude00%' OR Status LIKE '%\ud83d\ude00%' OR Version LIKE '%\ud83d\ude00%' OR ParentDocumentId LIKE '%\ud83d\ude00%' OR SubmissionId LIKE '%\ud83d\ude00%' OR CreatedAt LIKE '%\ud83d\ude00%' OR UpdatedAt LIKE '%\ud83d\ude00%' OR VerifiedBy LIKE '%\ud83d\ude00%' OR ReviewedBy LIKE '%\ud83d\ude00%' OR IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 143,
      "query": "rejection rate by month",
      "category": "grouping",
      "success": true,
      "response_time": 2157.7296257019043,
      "sql": "SELECT \n    YEAR(RejectionDate) AS Year, \n    MONTH(RejectionDate) AS Month, \n    COUNT(*) AS RejectionCount \nFROM \n    StudentRecommendeds \nWHERE \n    RejectionDate IS NOT NULL \nGROUP BY \n    YEAR(RejectionDate), \n    MONTH(RejectionDate) \nORDER BY \n    Year, Month WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 144,
      "query": "delayed processing",
      "category": "other",
      "success": true,
      "response_time": 1334.9018096923828,
      "sql": "SELECT COUNT(*) \nFROM DocumentSubmissions ds WITH (NOLOCK)\nWHERE ds.Status = 'Delayed' AND ds.IsComplete = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 145,
      "query": "linked submissions",
      "category": "other",
      "success": true,
      "response_time": 1780.2281379699707,
      "sql": "SELECT ds.Id, ds.StudentId, ds.TotalDocuments, ds.Status, ds.SubmittedAt \nFROM DocumentSubmissions ds WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON ds.StudentId = s.Id\nWHERE ds.Status = 'Linked' AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 146,
      "query": "show all orphaned students",
      "category": "selection",
      "success": true,
      "response_time": 657.9673290252686,
      "sql": "SELECT TOP 100 * FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 147,
      "query": "longest student name",
      "category": "other",
      "success": true,
      "response_time": 1775.1457691192627,
      "sql": "SELECT TOP 1 CONCAT(FirstName, ' ', MiddleName, ' ', LastName, ' ', SecondLastName) AS FullName \nFROM Students WITH (NOLOCK) \nWHERE IsActive = 1 \nORDER BY LEN(CONCAT(FirstName, ' ', MiddleName, ' ', LastName, ' ', SecondLastName)) DESC",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 148,
      "query": "married students with children",
      "category": "other",
      "success": true,
      "response_time": 1885.2484226226807,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK) \nJOIN FamilyMembers fm WITH (NOLOCK) ON s.Id = fm.StudentId \nWHERE s.MaritalStatus = 'Married' AND fm.IsDeceased = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 149,
      "query": "count audit logs",
      "category": "counting",
      "success": true,
      "response_time": 502.85935401916504,
      "sql": "SELECT COUNT(*) AS total FROM AuditLogs WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 150,
      "query": "total deleted records",
      "category": "other",
      "success": true,
      "response_time": 1380.3329467773438,
      "sql": "SELECT COUNT(*) FROM StudentDocuments_Backup_Duplicates WITH (NOLOCK) WHERE IsActive = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 151,
      "query": "alumni relationships",
      "category": "other",
      "success": true,
      "response_time": 1671.5707778930664,
      "sql": "SELECT DISTINCT f.FirstName, f.LastName, f.Relationship \nFROM FamilyMembers f WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON f.StudentId = s.Id\nWHERE s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 152,
      "query": "age pyramid of students",
      "category": "other",
      "success": true,
      "response_time": 1896.2302207946777,
      "sql": "SELECT \n    DATEPART(YEAR, GETDATE()) - DATEPART(YEAR, DateOfBirth) AS Age,\n    COUNT(*) AS StudentCount\nFROM \n    Students WITH (NOLOCK)\nWHERE \n    IsActive = 1\nGROUP BY \n    DATEPART(YEAR, GETDATE()) - DATEPART(YEAR, DateOfBirth)\nORDER BY \n    Age",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 153,
      "query": "golden ratio in statistics",
      "category": "other",
      "success": true,
      "response_time": 1127.7098655700684,
      "sql": "SELECT (1 + SQRT(5)) / 2 AS GoldenRatio",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 154,
      "query": "total occupations available",
      "category": "other",
      "success": true,
      "response_time": 1004.6617984771729,
      "sql": "SELECT COUNT(*) FROM Occupations WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 155,
      "query": "prime number student ids",
      "category": "other",
      "success": true,
      "response_time": 2597.5942611694336,
      "sql": "SELECT DISTINCT Id FROM Students WITH (NOLOCK) WHERE Id IN (SELECT Id FROM Students WHERE Id % 2 <> 0 AND Id % 3 <> 0 AND Id % 5 <> 0 AND Id % 7 <> 0 AND Id % 11 <> 0 AND Id % 13 <> 0 AND Id % 17 <> 0 AND Id % 19 <> 0 AND Id % 23 <> 0 AND Id % 29 <> 0 AND Id % 31 <> 0 AND Id % 37 <> 0 AND Id % 41 <> 0 AND Id % 43 <> 0)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 156,
      "query": "capacity analysis",
      "category": "other",
      "success": true,
      "response_time": 1008.8424682617188,
      "sql": "SELECT COUNT(DISTINCT Id) FROM Students WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 157,
      "query": "parent-child relationships",
      "category": "other",
      "success": true,
      "response_time": 1770.555019378662,
      "sql": "SELECT s.Id AS StudentId, s.FirstName, s.LastName, sd.Id AS DocumentId, sd.DocumentName\nFROM Students s WITH (NOLOCK)\nJOIN StudentDocuments sd WITH (NOLOCK) ON s.Id = sd.StudentId\nWHERE sd.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 158,
      "query": "students enrolled in summer",
      "category": "aggregation",
      "success": true,
      "response_time": 1696.8040466308594,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName \nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nWHERE sa.AcademicYear = 2023 AND sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 159,
      "query": "corrupted data detection",
      "category": "other",
      "success": true,
      "response_time": 2376.2919902801514,
      "sql": "SELECT DISTINCT sd.Id \nFROM StudentDocuments sd WITH (NOLOCK)\nLEFT JOIN StudentDocuments_Backup_Production_20250723 sdb WITH (NOLOCK) ON sd.Id = sdb.Id\nLEFT JOIN StudentDocuments_Backup_20250811_055943 sdb2 WITH (NOLOCK) ON sd.Id = sdb2.Id\nWHERE sdb.Id IS NULL AND sdb2.Id IS NULL AND sd.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 160,
      "query": "show me time travelers",
      "category": "selection",
      "success": true,
      "response_time": 1060.314655303955,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE DateOfBirth > '2023-10-01'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 161,
      "query": "show me students who have family members",
      "category": "selection",
      "success": true,
      "response_time": 581.1758041381836,
      "sql": "SELECT TOP 100 u.Id, u.UserName, u.Email, r.Name as Role\n                                  FROM AspNetUsers u WITH (NOLOCK)\n                                  INNER JOIN AspNetUserRoles ur WITH (NOLOCK) ON u.Id = ur.UserId\n                                  INNER JOIN AspNetRoles r WITH (NOLOCK) ON ur.RoleId = r.Id\n                                  WHERE r.Name LIKE '%Student%'\n                                  ORDER BY u.UserName",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 162,
      "query": "system stress points",
      "category": "other",
      "success": true,
      "response_time": 1063.4491443634033,
      "sql": "SELECT COUNT(*) FROM Students WITH (NOLOCK) WHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 163,
      "query": "number of student documents",
      "category": "other",
      "success": true,
      "response_time": 1137.7203464508057,
      "sql": "SELECT COUNT(*) FROM StudentDocuments WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 164,
      "query": "gap year students",
      "category": "temporal",
      "success": true,
      "response_time": 1327.3301124572754,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName, s.DateOfBirth, s.Email \nFROM Students s WITH (NOLOCK) \nWHERE s.GraduationDate IS NULL AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 165,
      "query": "fibonacci sequence in data",
      "category": "other",
      "success": true,
      "response_time": 4695.935964584351,
      "sql": "SELECT Id, StudentId, DocumentName, Description, FileName, ContentType, FileSize, FilePath, BlobUrl, FileHash, Status, IsRequired, IsVerified, VerifiedAt, VerifiedBy, ExpirationDate, ReviewNotes, ReviewedBy, ReviewedAt, IssuingAuthority, IssueDate, DocumentNumber, Version, IsOriginal, ParentDocumentId, Notes, CreatedAt, UpdatedAt, UploadedBy, DocumentTypeId, ExtractedText, ExtractionError, ExtractionStatus, IsActive, IsEncrypted, OriginalFileName, StorageLocation, StoredFileName, TextExtractedAt, SubmissionId \nFROM StudentDocuments WITH (NOLOCK) \nWHERE IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 166,
      "query": "how many scholarship applications",
      "category": "counting",
      "success": true,
      "response_time": 1059.5314502716064,
      "sql": "SELECT COUNT(*) FROM ScholarshipApplication WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 167,
      "query": "students under 18 with guardians",
      "category": "other",
      "success": true,
      "response_time": 1816.5342807769775,
      "sql": "SELECT s.Id, s.FirstName, s.LastName, f.FirstName AS GuardianFirstName, f.LastName AS GuardianLastName \nFROM Students s WITH (NOLOCK)\nJOIN FamilyMembers f WITH (NOLOCK) ON s.Id = f.StudentId\nWHERE DATEDIFF(YEAR, s.DateOfBirth, GETDATE()) < 18 AND f.IsLegalRepresentative = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 168,
      "query": "number of document submissions",
      "category": "other",
      "success": true,
      "response_time": 1049.5059490203857,
      "sql": "SELECT COUNT(*) FROM DocumentSubmissions WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 169,
      "query": "students with numbers in names",
      "category": "other",
      "success": true,
      "response_time": 1657.3457717895508,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE FirstName LIKE '%[0-9]%' OR MiddleName LIKE '%[0-9]%' OR LastName LIKE '%[0-9]%' OR SecondLastName LIKE '%[0-9]%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 170,
      "query": "verification pending",
      "category": "status",
      "success": true,
      "response_time": 1839.939832687378,
      "sql": "SELECT * FROM StudentDocuments WITH (NOLOCK) WHERE IsVerified = 0 AND IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 171,
      "query": "count student profiles",
      "category": "counting",
      "success": true,
      "response_time": 487.98370361328125,
      "sql": "SELECT COUNT(*) AS total FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 172,
      "query": "outlier identification",
      "category": "other",
      "success": true,
      "response_time": 2796.539306640625,
      "sql": "SELECT StudentId, COUNT(*) AS DocumentCount\nFROM StudentDocuments WITH (NOLOCK)\nWHERE IsActive = 1\nGROUP BY StudentId\nHAVING COUNT(*) > (SELECT AVG(DocumentCount) FROM (SELECT COUNT(*) AS DocumentCount FROM StudentDocuments WITH (NOLOCK) WHERE IsActive = 1 GROUP BY StudentId) AS SubQuery) + 2 * (SELECT STDEV(DocumentCount) FROM (SELECT COUNT(*) AS DocumentCount FROM StudentDocuments WITH (NOLOCK) WHERE IsActive = 1 GROUP BY StudentId) AS SubQuery)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 173,
      "query": "count student dependents",
      "category": "counting",
      "success": true,
      "response_time": 538.8069152832031,
      "sql": "SELECT COUNT(*) AS total FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 174,
      "query": "binary pattern ids",
      "category": "other",
      "success": true,
      "response_time": 1214.125156402588,
      "sql": "SELECT DISTINCT Id FROM MissingDocumentIds WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 175,
      "query": "summer vacation enrollments",
      "category": "aggregation",
      "success": true,
      "response_time": 1818.394422531128,
      "sql": "SELECT s.Id, s.FirstName, s.LastName, s.Email, s.MobilePhone \nFROM Students s WITH (NOLOCK) \nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId \nWHERE sa.AcademicYear = 2023 AND sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 176,
      "query": "scholarship amounts by status",
      "category": "grouping",
      "success": true,
      "response_time": 1222.6498126983643,
      "sql": "SELECT Status, SUM(PaymentAmount) AS TotalScholarshipAmount\nFROM ScholarshipApplications WITH (NOLOCK)\nGROUP BY Status",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 177,
      "query": "number of high schools",
      "category": "other",
      "success": true,
      "response_time": 1024.756669998169,
      "sql": "SELECT COUNT(*) FROM HighSchools WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 178,
      "query": "special character emails",
      "category": "other",
      "success": true,
      "response_time": 1204.5886516571045,
      "sql": "SELECT DISTINCT Email FROM Students WITH (NOLOCK) WHERE Email LIKE '%[^a-zA-Z0-9.@]%'",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 179,
      "query": "time to approval statistics",
      "category": "other",
      "success": true,
      "response_time": 2075.923204421997,
      "sql": "SELECT \n    DATEDIFF(DAY, SA.SubmittedAt, SA.ApprovedAt) AS DaysToApproval,\n    COUNT(*) AS ApprovalCount\nFROM \n    ScholarshipApplications SA WITH (NOLOCK)\nWHERE \n    SA.ApprovedAt IS NOT NULL\nGROUP BY \n    DATEDIFF(DAY, SA.SubmittedAt, SA.ApprovedAt) \nORDER BY \n    DaysToApproval",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 180,
      "query": "quietest period",
      "category": "other",
      "success": true,
      "response_time": 2151.193141937256,
      "sql": "SELECT COUNT(*) \nFROM DocumentSubmissions ds WITH (NOLOCK)\nWHERE ds.Status = 'Completed' \nAND ds.SubmittedAt BETWEEN '2023-01-01' AND '2023-12-31' \nAND ds.IsComplete = 1 \nGROUP BY YEAR(ds.SubmittedAt), MONTH(ds.SubmittedAt) \nORDER BY COUNT(*) ASC \nOFFSET 0 ROWS \nFETCH NEXT 1 ROWS ONLY",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 181,
      "query": "family members who are legal representatives",
      "category": "other",
      "success": true,
      "response_time": 1437.4244213104248,
      "sql": "SELECT * FROM FamilyMembers WITH (NOLOCK) WHERE IsLegalRepresentative = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 182,
      "query": "students as family members of others",
      "category": "other",
      "success": true,
      "response_time": 1706.3937187194824,
      "sql": "SELECT DISTINCT f.Id, f.FirstName, f.LastName, f.Relationship\nFROM FamilyMembers f WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON f.StudentId = s.Id\nWHERE f.IsDeceased = 0 AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 183,
      "query": "students with scholarships in draft status",
      "category": "status",
      "success": true,
      "response_time": 1403.8283824920654,
      "sql": "SELECT DISTINCT s.* \nFROM Students s WITH (NOLOCK)\nJOIN ScholarshipApplications sa WITH (NOLOCK) ON s.Id = sa.StudentId\nWHERE sa.Status = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 184,
      "query": "completion rate of applications",
      "category": "other",
      "success": true,
      "response_time": 1602.5538444519043,
      "sql": "SELECT COUNT(DISTINCT sa.Id) AS CompletedApplications, \n       COUNT(DISTINCT s.Id) AS TotalApplications\nFROM ScholarshipApplications sa WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON sa.StudentId = s.Id\nWHERE sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 185,
      "query": "sup how many peeps we got",
      "category": "counting",
      "success": true,
      "response_time": 1050.7020950317383,
      "sql": "SELECT COUNT(*) FROM Students WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 186,
      "query": "business hours applications",
      "category": "other",
      "success": true,
      "response_time": 2562.3838901519775,
      "sql": "SELECT a.ApplicationNumber, a.Status, a.SubmittedAt, s.FirstName, s.LastName \nFROM ScholarshipApplications a WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON a.StudentId = s.Id\nWHERE a.Status = 1 AND a.SubmittedAt >= '2023-10-01' AND a.SubmittedAt < '2023-10-31' \nORDER BY a.SubmittedAt",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 187,
      "query": "count all answers",
      "category": "counting",
      "success": true,
      "response_time": 1028.2959938049316,
      "sql": "SELECT COUNT(*) FROM StudentDocuments WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 188,
      "query": "approval rate by region",
      "category": "grouping",
      "success": true,
      "response_time": 2124.289035797119,
      "sql": "SELECT r.Region, COUNT(DISTINCT sa.Id) AS ApprovedApplications, COUNT(DISTINCT s.Id) AS TotalApplications, \n       CAST(COUNT(DISTINCT sa.Id) AS FLOAT) / NULLIF(COUNT(DISTINCT s.Id), 0) * 100 AS ApprovalRate\nFROM Regions r\nLEFT JOIN ScholarshipApplications sa ON r.Id = sa.StudentId\nLEFT JOIN Students s ON sa.StudentId = s.Id\nGROUP BY r.Region\nORDER BY r.Region WITH (NOLOCK)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 189,
      "query": "abandoned applications",
      "category": "other",
      "success": true,
      "response_time": 1426.8245697021484,
      "sql": "SELECT DISTINCT sa.Id \nFROM ScholarshipApplication sa WITH (NOLOCK) \nWHERE sa.Status = 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 190,
      "query": "negative age students",
      "category": "other",
      "success": true,
      "response_time": 1421.6101169586182,
      "sql": "SELECT * FROM Students WITH (NOLOCK) WHERE DATEDIFF(YEAR, DateOfBirth, GETDATE()) < 0",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 191,
      "query": "midnight applications",
      "category": "other",
      "success": true,
      "response_time": 1703.2935619354248,
      "sql": "SELECT * FROM ScholarshipApplication AS sa WITH (NOLOCK) WHERE sa.SubmittedAt >= CAST(CONVERT(VARCHAR, GETDATE(), 112) + ' 00:00:00' AS DATETIME) AND sa.SubmittedAt < CAST(CONVERT(VARCHAR, GETDATE(), 112) + ' 01:00:00' AS DATETIME)",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 192,
      "query": "applications with student and family details",
      "category": "other",
      "success": true,
      "response_time": 2159.609317779541,
      "sql": "SELECT a.*, s.*, f.*\nFROM ScholarshipApplications a WITH (NOLOCK)\nJOIN Students s WITH (NOLOCK) ON a.StudentId = s.Id\nJOIN FamilyMembers f WITH (NOLOCK) ON s.Id = f.StudentId",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 193,
      "query": "show family members who are deceased",
      "category": "selection",
      "success": true,
      "response_time": 1146.9366550445557,
      "sql": "SELECT * FROM FamilyMembers WITH (NOLOCK) WHERE IsDeceased = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 194,
      "query": "year-over-year comparisons",
      "category": "temporal",
      "success": true,
      "response_time": 1548.7043857574463,
      "sql": "SELECT \n    YEAR(ScholarshipApplication.SubmittedAt) AS Year,\n    COUNT(DISTINCT ScholarshipApplication.Id) AS TotalApplications\nFROM \n    ScholarshipApplication WITH (NOLOCK)\nGROUP BY \n    YEAR(ScholarshipApplication.SubmittedAt)\nORDER BY \n    Year",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 195,
      "query": "awaiting review",
      "category": "other",
      "success": true,
      "response_time": 1218.4066772460938,
      "sql": "SELECT COUNT(DISTINCT sa.Id) \nFROM ScholarshipApplications sa WITH (NOLOCK) \nWHERE sa.Status = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 196,
      "query": "transferred students",
      "category": "other",
      "success": true,
      "response_time": 1435.349464416504,
      "sql": "SELECT DISTINCT s.Id, s.FirstName, s.LastName, s.Email \nFROM Students s WITH (NOLOCK)\nJOIN StudentInstitutions si WITH (NOLOCK) ON s.Id = si.StudentId\nWHERE si.IsCurrentInstitution = 0 AND s.IsActive = 1",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 197,
      "query": "students with same counselor",
      "category": "other",
      "success": true,
      "response_time": 1841.4595127105713,
      "sql": "SELECT s1.Id, s1.FirstName, s1.LastName, s1.Email, s1.HighSchoolName, s1.GPA\nFROM Students s1 WITH (NOLOCK)\nJOIN Students s2 WITH (NOLOCK) ON s1.CounselorId = s2.CounselorId\nWHERE s1.Id <> s2.Id",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 198,
      "query": "applications by status with totals",
      "category": "grouping",
      "success": true,
      "response_time": 1190.0174617767334,
      "sql": "SELECT Status, COUNT(*) AS Total FROM ScholarshipApplications WITH (NOLOCK) GROUP BY Status",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 199,
      "query": "complete student profile with all relations",
      "category": "other",
      "success": true,
      "response_time": 3978.793144226074,
      "sql": "SELECT s.Id AS StudentId, \n       s.FirstName, \n       s.MiddleName, \n       s.LastName, \n       s.SecondLastName, \n       s.DateOfBirth, \n       s.Email, \n       s.MobilePhone, \n       s.HomePhone, \n       s.AddressLine1, \n       s.AddressLine2, \n       s.Municipality, \n       s.ZipCode, \n       s.HighSchoolName, \n       s.HighSchoolMunicipality, \n       s.GraduationDate, \n       s.GPA, \n       s.CollegeBoardScore, \n       s.CreatedAt AS StudentCreatedAt, \n       s.UpdatedAt AS StudentUpdatedAt, \n       sd.DocumentName, \n       sd.FileName, \n       sd.Status AS DocumentStatus, \n       sd.IsActive AS DocumentIsActive, \n       si.InstitutionName, \n       si.Program, \n       si.DegreeType, \n       si.StartDate, \n       si.EndDate, \n       si.GPA AS InstitutionGPA, \n       sr.NombreEstudiante AS RecommendedStudentName, \n       sr.GPA AS RecommendedStudentGPA \nFROM Students s WITH (NOLOCK)\nLEFT JOIN StudentDocuments sd WITH (NOLOCK) ON s.Id = sd.StudentId\nLEFT JOIN StudentInstitutions si WITH (NOLOCK) ON s.Id = si.StudentId\nLEFT JOIN StudentRecommendeds sr WITH (NOLOCK) ON s.StudentRecommendedId = sr.Id\nWHERE",
      "method": "unknown",
      "has_results": false,
      "error": null
    },
    {
      "id": 200,
      "query": "palindrome student ids",
      "category": "other",
      "success": true,
      "response_time": 1189.9528503417969,
      "sql": "SELECT DISTINCT Id FROM Students WITH (NOLOCK) WHERE Id = CAST(REVERSE(CAST(Id AS nvarchar(36))) AS uniqueidentifier)",
      "method": "unknown",
      "has_results": false,
      "error": null
    }
  ]
}